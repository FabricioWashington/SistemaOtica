package DAO.Crud;import DTO.Crud.FuncionarioDTO;import DTO.Login.LoginDTO;import DAO.Conexao.ConexaoDAO;import DTO.Crud.CargoFuncionarioDTO;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import javax.swing.JOptionPane;public class FuncionarioDAO {    Connection conn;    PreparedStatement pstm;    ResultSet rs;    ArrayList<LoginDTO> lista = new ArrayList<>();    public void cadastrarFuncionarioCompleto(FuncionarioDTO objcadastrofuncionario) {        conn = new ConexaoDAO().conectaBD();        try {            conn.setAutoCommit(false); // Desliga o modo de commit automático            // Registrar o cadastro            String sqlCadastro = "insert into cadastro_funcionarios (CPF, Nome_Completo, idFuncao,  Data_Cadastro, Data_Modificacao) values (?,?,?,?,?)";            PreparedStatement pstmCadastro = conn.prepareStatement(sqlCadastro);            pstmCadastro.setString(1, objcadastrofuncionario.getCPF());            pstmCadastro.setString(2, objcadastrofuncionario.getNome_Completo());            pstmCadastro.setInt(3, objcadastrofuncionario.getIdFuncao());            pstmCadastro.setTimestamp(4, new java.sql.Timestamp(objcadastrofuncionario.getData_Cadastro().getTime()));            pstmCadastro.setTimestamp(5, new java.sql.Timestamp(objcadastrofuncionario.getData_Modificacao().getTime()));            pstmCadastro.execute();            conn.commit(); // Efetua o commit das transações            // Exibir mensagem de sucesso            JOptionPane.showMessageDialog(null, "Os dados foram registrados corretamente.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);        } catch (SQLException e) {            JOptionPane.showMessageDialog(null, "Esse funcionario já foi cadastrado no sistema", "Erro", JOptionPane.ERROR_MESSAGE);            JOptionPane.showInputDialog(e);            try {                conn.rollback(); // Em caso de erro, faz rollback para desfazer as alterações            } catch (SQLException ex) {                ex.printStackTrace();            }        } finally {            try {                conn.setAutoCommit(true); // Restaura o modo de commit automático                conn.close(); // Fecha a conexão            } catch (SQLException ex) {                ex.printStackTrace();            }        }    }    public ResultSet listarIdFuncao(CargoFuncionarioDTO objCargoFuncionario) {        conn = new ConexaoDAO().conectaBD();        String sql = "SELECT * FROM cargo_funcionario ORDER BY cargo";        try {            pstm = conn.prepareStatement(sql);            return pstm.executeQuery();        } catch (SQLException e) {            System.out.println(e.getMessage());            return null;        }    }}